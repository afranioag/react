criando projeto:
	--->	npx create-react-app nome_do_projeto --template typescript
    	em caso monoRepositorio, entrar na pasta criada e apagar a pasta .git. Ela pode estar oculta.
	* o Segundo passo é limpar o projeto removendo arquivos de apresentação do react.
		1. Na pasta public deixar apenas -> index.html e favicon.ico
		1.1 dentro desse index.html deve ser removido os comentários, as linhas que usavam os arquivos apagados antes.
			apagar meta com cor de tema, mudar idioma para pt-br se preferir. 
		1.2 ajustar o <title> o <meta> content="descrição do projeto, simples", no body em <noscript> pode mudar a mensagem tbm para português.
		
		2. Agora na pasta src apagar -> App.test.tsx, logo.svg, reportWebVitals.tx, setupTests.ts, index.css
		2.1 Em App.css limpar tudo.
		2.2 Em App.tsx remover import que usa logo.svg, import do React que está agora subEntendido no sistema, 
			no return deixar apenas uma tag h1 para iniciar.
		2.3 Em index.tsx apagar import não usado (reportWebVitals e ./index.css)
		
		3.1 No arquivo tsconfig.json adicionar abaixo de "compilerOptions":{ "baseUrl":"./src", -> isso irá ajudar nos imports dos componentes.


No proximo passo iremos adicionar o BOOTSTRAP ao projeto.
para adicionar alguma lib
	---> yarn add bootstrap  //bootstrap é uma lib para trabalhar com rendereização
	

	* depois de instalado
	Seguir com a instalação ---> yarn add node-sass@4.14.1
	* agora vamos partir para customização do tema do bootstrap. Para isso precisamos criar um arquivo ".scss"
	dica: custom.scss
		criar caminho -> src/assets/styles/custom.css e dentro desse arquivo criar as classes de customização do
			bootstrap. Verificar documentação pois já existem os nomes padrões. ex -> $theme-colors: (), $body-bg: #cor;
	

	Existem varias classes de estilos prontas que vc pode usar no seu codigo. leia a documentação.
	para cores: https://getbootstrap.com/docs/4.0/utilities/colors/

	Depois podemos adicionar a formação prettier. Para isso, crie um arquivo src/.prettierrc e dentro desse arquivo adicione
		{ "tabWidt": 2, 
		  "useTabs": false,
		  "singleQuote": true
		} e salve.
	Em seguida instalar extenção prettier code formater. 
		para usar a formatação -> shift + alt + f

User YARN como gerenciador de dependências.
	para instalar as dependencias iniciais:
	---> yarn install
	---> yarn start - inicia o projeto para rodar.


navBar - para criação de navegação do usuário em tela superior(geralmente) onde fica os menus

google fonts
https://fonts.google.com/

_____________________
Arquitetura do codigo.
App.css estilo universal do app

google fonts
https://fonts.google.com/

https://getbootstrap.com/
https://getbootstrap.com/docs/5.0/layout/breakpoints/ -> para configurar as responsividade dos layout
https://getbootstrap.com/docs/5.0/layout/containers/
https://getbootstrap.com/docs/4.0/layout/grid/

---- no css quando quisermos determinar uma tamanho de midia usamos @media(min-width: 576px){ css } por ex. estamos dizendo que,
quando atingir o tamanho minimo de 576px deve seguir as configurações que estiverem ali dentro


flex box:
https://www.alura.com.br/artigos/css-guia-do-flexbox?gclid=Cj0KCQiAr5iQBhCsARIsAPcwROMrCfiMonLoJcHGsKBTrxNobYugwmykFb9Act77sB_8kVuUTO5GwBUaAsS2EALw_wcB
https://flexboxfroggy.com/
https://www.w3schools.com/css/css3_flexbox.asp
____________________________________________________________

Para rotas:
yarn add react-router-dom @types/react-router-dom
na pasta src criar arquivo Routes.tsx para criar as rolas.

____________________________________________________________